name: CI/CD
on:
  pull_request:
    types: [ opened, synchronize ]
  workflow_dispatch:
    inputs:
      environment:
        description: "Name of the role to create"
        required: true
      actions:
        description: "Action to be performed"
        type: choice
        options:
          - "Create"
          - "Destroy"

env:
  tf_version: '1.5.2'
  working-directory: '${{ github.repository }}/modules'

permissions:
  id-token: write
  contents: write
  pull-requests: write
  actions: write

jobs:

  discover-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Find the environment name
        id: env
        run: |
          env_name=${{ github.event.inputs.environment }}
          echo "matrix=$env_name" >> $GITHUB_OUTPUT
          echo "${matrix}"
      - name: Find the action
        id: check_action
        run: |
          tf_action=${{ github.event.inputs.actions }}
          echo "action_matrix=$tf_action" >> $GITHUB_OUTPUT
          echo "${action_matrix}"
    outputs:
      target_env: ${{ steps.env.outputs.matrix }}
      tf_action: ${{ steps.check_action.outputs.action_matrix }}

  terraform-deploy:
    runs-on: ubuntu-latest
    needs: [ discover-environment ]
    if: ${{ github.event.inputs.actions == 'Create' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: ${{ github.repository }}

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.TF_AWS_ROLE }}
          aws-region: ap-southeast-2


      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.2"  # Adjust the version as needed

      - name: Terraform init
        working-directory: '${{ github.repository }}/modules/'
        run: |
          aws sts get-caller-identity
          terraform init

      - name: Terraform plan
        working-directory: '${{ github.repository }}/modules/'
        run: terraform plan -var="dummy_name=${{ github.event.inputs.environment }}" -out=tfplan

      - name: Terraform apply
        working-directory: '${{ github.repository }}/modules/'
        run: terraform apply -auto-approve tfplan


      
